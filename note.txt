npx prisma migrate dev --name <migration_name>
npx prisma db seed
dùng middleware để xác thực input, có thể dùng lại middleware cho nhiều api

--

[DONE] 02/11 Kết nối elastic search, job đồng bộ bài viết
  + Chỉ đồng bộ những thông tin cần dùng để search
  vd nội dung, tên tác giả, ... (có thể đồng bộ dạng: {...post, author: {id: 1, name: 'Sơn'}})
  Số tương tác thì có thể không cần đồng bộ, truy vấn trực tiếp trong postgres luôn.

[DONE] 03/11 Service: chỉnh sửa bài viết, nếu chỉnh sửa các trường được đồng bộ lên es thì cập nhật lại status trong post log.

[DONE] Profile
- [done] getMe
- [done] update
- [] change avatar
- [done] own posts

[DONE] Chỉnh sửa search
- [done] Thêm lọc theo category, sort - 17/11/2024

[] Trang cá nhân user khác
[] Xác nhận mật khẩu khi đăng ký
[done] Comment bài viết     !!!!!!!!!!!!!!!!!!!
[done] Đánh giá bài viết

[DONE] Score
- [done] Hiển thị view - 17/11/2024
- [done] Hiển thị rating
- [done] số lượt like, dislike

!important: Triển khai luôn việc đồng bộ job lên es và search bằng es.
- [done] Những trường cần đồng bộ:
  + những trường cần tìm kiếm bằng search
  + những trường ít cần đồng bộ lại
- [done] Cập nhật lại sync_log khi các trường cần đồng bộ của một bản ghi bị thay đổi khi gọi api cập nhật

[done] Quản lý phiên bản bài viết

[done] Bài nháp (isPublished khi create)

[] Xóa bài viết

[done] Đổi mật khẩu

[done] Fix bug không hiện content khi update bài viết, không submit được

[] Load comment ưu tiên (optional), logic: Query phân trang comment except comment được ưu tiên.

[done] các hoạt động gần đây

[] Thống kê của user

[done] Danh sách yêu thích

[] Thông báo
- [done] Thông báo sẽ chứa id của item liên kết,
- [done] Đối với post thì từ id của post sẽ lấy ra bài viết đó.
- [] đối với comment thì từ id của comment sẽ lấy ra post -> chuyển hướng đến post đó + #id của comment (optional).
- [done] Đăng kí thông báo
- [done] Hủy thông báo
- [] Thông báo reply comment
- [done] Trang danh sách thông báo

[] Gợi ý
- Tạo một rating với score = 0 thể hiện người dùng đã xem bài viết.
- cài đặt thuật toán (hàm gợi ý bài viết - chatgpt)

[] Lịch sử xem bài viết của người dùng (rating)

[] thêm cột implicit rating để lưu điểm đánh giá ngầm của một user, đánh giá này sẽ được tính bằng sắc thái comment của user (user comment -> phân tích sắc thái -> điểm (ngầm - implicit) -> lưu db, để nếu user không đánh giá thì lấy điểm này). 

[] Giao diện nền ảnh động: https://zustand-demo.pmnd.rs/

[] Cài đặt hệ thống -> docker, elasticsearch (maybe), postgresql (maybe).

[] Thêm trường để mô tả user: đã làm việc tại, nghề nghiệp, kĩ năng, giới tính, ...
VisualParadigm: usecase diagram: bổ sung chức năng xem trước bài viết, yêu thích bài viết. Đổi tên thích/không thích -> đánh giá.
Phân tích sắc cmt -> đánh tráo khái niệm :) -> Kiểm duyệt nội dung comment, xem có chứa từ ngữ thù địch nào không mới cho post.

build docker image: docker build -t be_blog .

chạy docker container: docker run -p 4537:4537 be_blog
